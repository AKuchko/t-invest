from grpc.aio import ClientInterceptor
from tinkoff.invest import Client
import time

from config import TOKEN, API_TARGET
from utils.account import sandbox_pay_in, get_balance
from utils.operations import get_portfolio
from utils.instruments import get_figi
from utils.logger import logger

# === –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø–µ—Å–æ—á–Ω–∏—Ü—ã ===
# TOKEN = '–¢–í–û–ô_API_–ö–õ–Æ–ß'

# === FIGI –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π ===
FIGI_LIST = {
    'SBER': 'BBG004730N88',  # –°–±–µ—Ä–±–∞–Ω–∫
    'GAZP': 'BBG004730RP0',  # –ì–∞–∑–ø—Ä–æ–º
    'LKOH': 'BBG004731032',  # –õ—É–∫–æ–π–ª
    'GMKN': 'BBG00475K6G7',  # –ù–æ—Ä–Ω–∏–∫–µ–ª—å
    'YNDX': 'BBG006L8G4H1'  # –Ø–Ω–¥–µ–∫—Å
}


# === –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ ===
# def sandbox_pay_in(client, account_id, currency='RUB', balance=100000):
#     try:
#         request = tinvest.SandboxSetCurrencyBalanceRequest(
#             currency=currency,
#             balance=balance
#         )
#         client.set_sandbox_currencies_balance(request)
#         print(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–µ—Å–æ—á–Ω–∏—Ü—ã –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {balance} {currency}")
#     except Exception as e:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")

with Client(TOKEN, target=API_TARGET) as client:
    # === –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è ===
    # def get_balance():
    #     try:
    #         response = client.operations.get_portfolio()
    #         positions = response.positions
    #         if len(positions) == 0:
    #             print("–ü–æ—Ä—Ç—Ñ–µ–ª—å –ø—É—Å—Ç.")
    #         else:
    #             print("\n–¢–µ–∫—É—â–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å:")
    #             for position in positions:
    #                 print(f"{position.name}: {position.balance} {position.currency}")
    #     except Exception as e:
    #         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")


    # === –ü—Ä–æ–≤–µ—Ä–∫–∞ FIGI –¥–ª—è –∞–∫—Ü–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ===
    # def get_figi():
    #     try:
    #         response = client.get_market_stocks()
    #         stocks = response.payload.instruments
    #         print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ FIGI:")
    #         for stock in stocks:
    #             if stock.ticker in FIGI_LIST:
    #                 print(f"{stock.ticker}: {stock.figi}")
    #     except Exception as e:
    #         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ FIGI: {e}")


    # === –í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω–æ–≥–æ –æ—Ä–¥–µ—Ä–∞ ===
    def place_market_order(figi, quantity, direction):
        try:
            order = tinvest.MarketOrderRequest(
                lots=quantity,
                operation=direction
            )
            response = client.post_orders_market_order(figi=figi, market_order_request=order)
            print(f"‚úÖ –û—Ä–¥–µ—Ä {'–ø–æ–∫—É–ø–∫–∏' if direction == 'Buy' else '–ø—Ä–æ–¥–∞–∂–∏'} –¥–ª—è {figi} –≤—ã–ø–æ–ª–Ω–µ–Ω: {response.payload}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –æ—Ä–¥–µ—Ä–∞ –¥–ª—è {figi}: {e}")


    # === –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞ ===
    def scalping(figi_list):
        for ticker, figi in figi_list.items():
            print(f"\nüöÄ –°–∫–∞–ª—å–ø–∏–Ω–≥ –¥–ª—è {ticker} ({figi})")

            # –ü–æ–∫—É–ø–∞–µ–º –æ–¥–∏–Ω –ª–æ—Ç
            print(f"–ü–æ–∫—É–ø–∫–∞ {ticker}...")
            place_market_order(figi, 1, 'Buy')
            time.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ 1 —Å–µ–∫ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏

            # –ü—Ä–æ–¥–∞—ë–º –æ–¥–∏–Ω –ª–æ—Ç
            print(f"–ü—Ä–æ–¥–∞–∂–∞ {ticker}...")
            place_market_order(figi, 1, 'Sell')
            time.sleep(1)


    # === –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã ===
    print("\n--- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –¢–∏–Ω—å–∫–æ—Ñ—Ñ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ ---")

    # –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á—ë—Ç–∞
    print("\n--- –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á—ë—Ç–∞ –≤ –ø–µ—Å–æ—á–Ω–∏—Ü–µ ---")
    sandbox_pay_in()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    print("\n--- –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è ---")
    get_balance()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º FIGI (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å)
    print("\n--- –ü—Ä–æ–≤–µ—Ä—è–µ–º FIGI –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π ---")
    get_figi()

    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫–∞–ª—å–ø–∏–Ω–≥ –ø–æ –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º –≤ —Å–ø–∏—Å–∫–µ
    print("\n--- –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–ª—å–ø–∏–Ω–≥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π ---")
    scalping(FIGI_LIST)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Ç–æ—Ä–≥–æ–≤–ª–∏
    print("\n--- –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ—Å–ª–µ —Å–∫–∞–ª—å–ø–∏–Ω–≥–∞ ---")
    get_balance()
